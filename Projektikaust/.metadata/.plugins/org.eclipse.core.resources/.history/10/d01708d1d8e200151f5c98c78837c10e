package mainPackage;
import java.util.Random;

public class Referee {

	Malelaud_2 gameBoard;
	Player whitePlayer;
	Player blackPlayer;
	byte gameNr;
	byte turn;
	String color;
	String th1;
	int nr1;
	String th2;
	int nr2;
	
	public Referee(Malelaud_2 board, Player white, Player black ){
		gameBoard = board;
		whitePlayer = white;
		blackPlayer = black;
		gameNr = 0;
		turn = (byte)new Random().nextInt(2);
		switch (turn)
		{
			case 0: color = "m"; break;
			case 1: color = "v"; break;
		}
	}
	
	private String chstr(String str, int i){
		return Character.toString(str.charAt(i));
	}
	
	private int chint(String str, int i){
		return Character.getNumericValue(str.charAt(i));
	}
	
	//T‰he indeksi v‰‰rtus reas "ABCDEFGH"
	private int letterVal(String s){
		return gameBoard.tahehoius.indexOf(s);
	}
	
	private boolean isCorrectFormat(String input){
		if (input.length() != 4) return false; 
		else if (!input.matches("[a-hA-H][1-8][a-hA-H][1-8]")) return false;
		else if (input.charAt(0) == input.charAt(2) && input.charAt(1) == input.charAt(3)) return false;
		return true;
	}
	
	private boolean isMyPawn(String input)
	{				
		if (gameBoard.getPawn(th1, nr1) != color) return false;
		return true;
	}
	
	private boolean isSquareOccupied(String input){
		String square = gameBoard.getPawn(chstr(input, 2), chint(input, 3));
		if (square == color) return true; 
		return false;
	}
	
	private boolean isAttackMove(String input){
		String square = gameBoard.getPawn(chstr(input, 2), chint(input, 3));		
		if (square != "-") return true;
		return false;
	}
	
	private boolean isLegalAttack(String input){
		
		
		if ()
		return true;
	}
	
	private boolean isLegalMove(String input){
		
		if (turn == 0){
			
			if (nr2 < nr1 || nr2-nr1 > 2) return false;	
			if (nr1 != 1 && nr2-nr1 != 1) return false;
			if (nr1 == 1 && Math.abs(letterVal(th1) - letterVal(th2)) > 2) return false;
			if (nr1 == 1 &&
				Math.abs(
					gameBoard.tahehoius.indexOf(chstr(input, 2)) - 
					gameBoard.tahehoius.indexOf(chstr(input, 4)))
				> 1) return false;	
		}
		return true;
	}
	
	public boolean Assess(String input) 
	{
		th1 = chstr(input, 0);
		nr1 = chint(input, 1);
		th2 = chstr(input, 2);
		nr2 = chint(input, 3);
		
		switch (turn)
		{
			case 0: color = "m"; break;
			case 1: color = "v"; break;
		}
		
		if (!isCorrectFormat(input)) return false;
		else if (!isMyPawn(input)) return false;
		else if (!isLegalMove(input)) return false;
		
		return true;
	}
	
	public void nextTurn(){
		turn = (byte)((turn + 1) % 2);
	}
}
