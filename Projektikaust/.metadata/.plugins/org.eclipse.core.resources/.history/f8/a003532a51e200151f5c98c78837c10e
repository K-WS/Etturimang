package mainPackage;
import java.util.Random;

public class Referee {

	Malelaud_2 gameBoard;
	Player whitePlayer;
	Player blackPlayer;
	byte gameNr;
	byte turn;
	String color;
	
	public Referee(Malelaud_2 board, Player white, Player black ){
		gameBoard = board;
		whitePlayer = white;
		blackPlayer = black;
		gameNr = 0;
		turn = (byte)new Random().nextInt(1);
		switch (turn)
		{
			case 0: color = "m"; break;
			case 1: color = "v"; break;
		}
	}
	
	private String chstr(String str, int i){
		return Character.toString(str.charAt(i));
	}
	
	private int chint(String str, int i){
		return Character.getNumericValue(str.charAt(i));
	}
	
	private boolean isCorrectFormat(String input){
		if (input.length() != 4) return false; 
		else if (!input.matches("[a-hA-H][1-8][a-hA-H][1-8]")) return false;
		else if (input.charAt(0) == input.charAt(2) && input.charAt(1) == input.charAt(3)) return false;
		return true;
	}
	
	private boolean isMyPawn(String input)
	{		
		
		if (gameBoard.getPawn(chstr(input, 0), chint(input, 1)) != color) return false;
		return true;
	}
	
	private boolean isLegalMove(String input){
		
		String square = gameBoard.getPawn(chstr(input, 2), chint(input, 3));
		if (square == color) return false;
		
		if (square != "-") {
			
			switch(turn){
				case 0: whitePlayer.pawnKilled();
				case 1: blackPlayer.pawnKilled();
			}
		}
		return true;
	}
	
	public boolean Assess(String input) 
	{
		switch (turn)
		{
			case 0: color = "m"; break;
			case 1: color = "v"; break;
		}
		
		if (!isCorrectFormat(input)) return false;
		else if (!isMyPawn(input)) return false;
		else if (!isLegalMove(input)) return false;
		
		return true;
	}
	
	public void nextTurn(){
		turn = (byte)((turn + 1) % 2);
	}
}
